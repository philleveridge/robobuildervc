#summary Details of RobobuilderLib.wckMotion class
= Introduction =

RobobuilderLib.wckMotion class. Provides access through the RBC controller to the wckBus for control of the servos. Works with either standard firmware or DCMP.hex

= Details =

== example ==
{{{
wckMotion w = new wckMotion("COM1", true);
}}}

== constructor ==
{{{
RobobuilderLib.wckMotion.wckMotion(string, bool) 
RobobuilderLib.wckMotion.wckMotion(RobobuilderLib.PCremote)
RobobuilderLib.wckMotion.~wckMotion() 
}}}

== methods ==
=== low level access ===
{{{
RobobuilderLib.wckMotion.wckBreak() 
RobobuilderLib.wckMotion.wckMovePos(int, int, int) 
RobobuilderLib.wckMotion.wckPassive(int) 
RobobuilderLib.wckMotion.wckPosMove10Bit(int, int, int) 
RobobuilderLib.wckMotion.wckPosRead10Bit(int) 
RobobuilderLib.wckMotion.wckReadBoundary(int) 
RobobuilderLib.wckMotion.wckReadIgain(int) 
RobobuilderLib.wckMotion.wckReadIO(int) 
RobobuilderLib.wckMotion.wckReadMotionData(int) 
RobobuilderLib.wckMotion.wckReadOverload(int) 
RobobuilderLib.wckMotion.wckReadPDgain(int) 
RobobuilderLib.wckMotion.wckReadPos(int) 
RobobuilderLib.wckMotion.wckReadPos(int, int) 
RobobuilderLib.wckMotion.wckReadSpeed(int) 
RobobuilderLib.wckMotion.wckSetBaudRate(int, int) 
RobobuilderLib.wckMotion.wckSetBoundary(int, int, int) 
RobobuilderLib.wckMotion.wckSetID(int, int) 
RobobuilderLib.wckMotion.wckSetIgain(int, int) 
RobobuilderLib.wckMotion.wckSetIgainRT(int, int) 
RobobuilderLib.wckMotion.wckSetOper(byte, byte, byte, byte) 
RobobuilderLib.wckMotion.wckSetOverload(int, int) 
RobobuilderLib.wckMotion.wckSetPDgain(int, int, int) 
RobobuilderLib.wckMotion.wckSetPDgainRT(int, int, int) 
RobobuilderLib.wckMotion.wckSetSpeed(int, int, int) 
RobobuilderLib.wckMotion.wckSetSpeedRT(int, int, int) 
RobobuilderLib.wckMotion.wckWriteIO(int, bool, bool) 
RobobuilderLib.wckMotion.wckWriteMotionData(int, int, int) 
}}}
=== high level access ===
{{{
RobobuilderLib.wckMotion.PlayFile(string) 
RobobuilderLib.wckMotion.PlayFile(string, int, int) 
RobobuilderLib.wckMotion.PlayMatrix(RobobuilderLib.matrix) 
RobobuilderLib.wckMotion.PlayMatrix(RobobuilderLib.matrix, int, int) 
RobobuilderLib.wckMotion.PlayPose(int, int, object[], bool) 
RobobuilderLib.wckMotion.PlayPose(int, int, byte[], bool) 
RobobuilderLib.wckMotion.SyncPosSend(int, int, object[], int)
RobobuilderLib.wckMotion.SyncPosSend(int, int, byte[], int) 
RobobuilderLib.wckMotion.BasicPose(int, int) 

RobobuilderLib.wckMotion.servoID_readservo(int) 
RobobuilderLib.wckMotion.servoStatus(int, bool) 
RobobuilderLib.wckMotion.set_kfactor(double) 
RobobuilderLib.wckMotion.set_trigger(RobobuilderLib.trigger) 
RobobuilderLib.wckMotion.reset_timer() 

RobobuilderLib.wckMotion.close() 
RobobuilderLib.wckMotion.delay_ms(int) 
}}}

== properties ==
{{{
RobobuilderLib.wckMotion.DCMP 
RobobuilderLib.wckMotion.basic_pos 
RobobuilderLib.wckMotion.basic16 
RobobuilderLib.wckMotion.basic18 
RobobuilderLib.wckMotion.initpos 
RobobuilderLib.wckMotion.kfactor 
RobobuilderLib.wckMotion.lb_Huno 
RobobuilderLib.wckMotion.ub_Huno 
RobobuilderLib.wckMotion.Message 
RobobuilderLib.wckMotion.pcR 
RobobuilderLib.wckMotion.pos 
RobobuilderLib.wckMotion.respnse 
RobobuilderLib.wckMotion.serialPort 
RobobuilderLib.wckMotion.sids 
RobobuilderLib.wckMotion.tcnt 
RobobuilderLib.wckMotion.trig 
RobobuilderLib.wckMotion.MAX_SERVOS
}}}